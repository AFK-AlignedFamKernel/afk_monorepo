// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("BACKEND_DATABASE_URL")
}

model registration {
  id               Int       @id() @default(autoincrement())
  contract_address String?
  nickname         String?
  created_at       DateTime? @default(now()) @db.Timestamp(6)
  is_confirmed     Boolean?  @default(false)
  phone_number     String?
  email            String?
  starknet_address String?
  evm_address      String?
}

model User {
  id          String   @id @default(cuid())
  userAddress String   @unique
  email       String?  @unique
  loginType   String
  verified    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  socialAccounts SocialAccount[]

  @@map("users")
}

model SocialAccount {
  id           String   @id @default(cuid())
  userId       String
  platform     String
  accountId    String
  username     String?
  picture      String?
  accessToken  String?
  refreshToken String?
  expiresAt    DateTime?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, platform])
  @@map("social_accounts")
}
