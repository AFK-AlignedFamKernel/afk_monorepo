version: '3.8'

services:
  pwa:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_PATH: apps/pwa
    working_dir: /app/apps/pwa
    command: pnpm run dev
    volumes:
      - .:/app
    ports:
      - "${PWA_PORT}:${PWA_PORT}" # Use environment variable
    depends_on:
      - packages
    env_file:
      - .env

  data-backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_PATH: apps/data-backend
    working_dir: /app/apps/data-backend
    command: pnpm run start
    volumes:
      - .:/app
    ports:
      - "${DATA_BACKEND_PORT}:${DATA_BACKEND_PORT}" # Use environment variable
    depends_on:
      - packages
    env_file:
      - .env

  nestjs-indexer:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_PATH: apps/nestjs-indexer
    working_dir: /app/apps/nestjs-indexer
    command: pnpm run start
    volumes:
      - .:/app
    ports:
      - "${NESTJS_INDEXER_PORT}:${NESTJS_INDEXER_PORT}" # Use environment variable
    depends_on:
      - packages
    env_file:
      - .env

  algo-relay:
    build:
      context: .
      dockerfile: algo-relay-afk/Dockerfile
    ports:
      - "${ALGO_RELAY_PORT:-8080}:8080"
    env_file:
      - .env
    depends_on:
      - postgres

  postgres:
    image: postgres:latest
    shm_size: 16g
    container_name: postgres_db
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  packages:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        APP_PATH: packages
    working_dir: /app/packages
    command: pnpm run build
    volumes:
      - .:/app
    env_file:
      - .env

volumes:
  postgres_data: